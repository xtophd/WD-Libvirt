## Authors: 
##   Christoph Doerbeck
##
## Summary:
##   This playbook attempts to configure a rhel 8.0 (or later) system with libvirt
##   to host an openshift 4.2 deployment
##
##   This playbook is NOT meant for student execution  
##
##   This playbook IS meant for someone who'd like to stand up Openshift on a single node
##
## Playbook Assumptions:
##     #1 you are executing this on the OS already installed on bare-metal
##     #2 your host is registered to RH CDN with subscription-manager
##     #3 the following packages have been installed: git, ansible
##     #4 system has plenty of storage and memory
##

---
- hosts: myVirthost

  tasks:

  - name: "LIBVIRT-BASICS: Create ssh directory"
    file:
      path: /root/.ssh
      mode: "0700"
      state: directory

  - name: "LIBVIRT-BASICS: test virthost ssh key"
    stat: path="/root/.ssh/id_rsa.pub"
    register: test_ssh_key

  - name: "LIBVIRT-BASICS: create virthost ssh key"
    command: "ssh-keygen -t rsa -b 2048 -N '' -f /root/.ssh/id_rsa"
    when: test_ssh_key.stat.exists == false

  - name: "LIBVIRT-BASICS: test bastion ssh key"
    stat: path="/root/.ssh/bastion_rsa.pub"
    register: test_bastion_key

  - name: "LIBVIRT-BASICS: create bastion ssh key"
    command: "ssh-keygen -t rsa -b 2048 -N '' -f /root/.ssh/bastion_rsa"
    when: test_bastion_key.stat.exists == false

  - name: "LIBVIRT-BASICS: edit bastion public ssh key"
    vars:
      p_name:  "{{ hostvars[item]['inventory_hostname_short'] }}"
      p_fqdn:  "{{ hostvars[item]['inventory_hostname_short'] }}.{{ g_pubFQDN }}"
    replace:
      path:    "/root/.ssh/bastion_rsa.pub"
      regexp:  "root@.*$"
      replace: "root@{{ p_fqdn }}"
    loop: "{{ groups['myBastion'] }}"

  - name: "LIBVIRT-BASICS: create html directory"
    file:
      path: "{{ kvm_cfg.iso.dir }}"
      mode: "0755"
      owner: "root"
      group: "root"
      state: directory

  - name: "LIBVIRT-BASICS: Create qcow directory"
    file:
      path: "{{ kvm_cfg.qcow_dir }}"
      mode: "0775"
      state: directory

#  - name: "LIBVIRT-BASICS: stat repo mount point"
#    stat: path="{{ kvm_cfg.iso.mount }}"
#    register: test_repo_mount

#  - name: "LIBVIRT-BASICS: create repo mount point"
#    when: test_repo_mount.stat.exists == false
#    file:
#      path: "{{ kvm_cfg.iso.mount }}"
#      mode: "0755"
#      owner: "root"
#      group: "root"
#      state: directory

#  - name: "LIBVIRT-BASICS: stat RHEL ISO"
#    stat: path="{{ kvm_cfg.iso.dir }}/{{ kvm_cfg.iso.name }}"
#    register: test_rhel_iso
#
#  - name: "LIBVIRT-BASICS: fail if RHEL ISO absent"
#    fail: msg="COPY YOUR RHEL ISO HERE {{ kvm_cfg.iso.dir }}/{{ kvm_cfg.iso.name }}"
#    when: test_rhel_iso.stat.exists == false

  - debug:
      msg: "Ansible Facts: {{ ansible_distribution }} {{ ansible_distribution_major_version  }}"

  - name: "Subscription Manager enable RHEL 7 required repos only"
    rhsm_repository: 
      name: "rhel-7-server-rpms,rhel-7-server-optional-rpms,rhel-7-server-extras-rpms"
      purge: True
      state: enabled
    when:
      - ansible_distribution == "Red Hat"
      - ansible_distribution_major_version == "7"

  - name: "Subscription Manager enable RHEL 8 required repos only"
    rhsm_repository: 
      name: "rhel-8-baseos-rpms,rhel-8-appstream-rpms"
      purge: True
      state: enabled
    when:
      - ansible_distribution == "Red Hat"
      - ansible_distribution_major_version == "8"

  - name: "LIBVIRT-BASICS: install RHEL8 unique packages"
    yum: name=policycoreutils-python-utils state=installed
    when:
      - ansible_distribution == "Red Hat"
      - ansible_distribution_major_version == "8"

  - name: "LIBVIRT-BASICS: install RHEL7 unique packages"
    yum: name=policycoreutils-python state=installed
    when:
      - ansible_distribution == "Red Hat"
      - ansible_distribution_major_version == "7"

  - name: "LIBVIRT-BASICS: install common general packages"
    yum: name=git,tree,wget,yum-utils,firewalld,httpd,net-tools,traceroute,nmap state=installed

  - name: "LIBVIRT-BASICS: install common virtualization packages"
    yum: name=qemu-kvm,libvirt,virt-install,libvirt-client,libguestfs-tools state=installed

  - name: "LIBVIRT-BASICS: deploy httpd configuration"
    vars:
      - p_port: "{{ kvm_cfg.http_port }}"
    template:
      src: "httpd-conf.j2"
      dest: "/etc/httpd/conf/httpd.conf"
      owner: root
      group: root
      mode: 0644

  - name: "LIBVIRT-BASICS: selinux restorecon on /var/www/html"
    shell: restorecon -R /var/www/html

  - name: "LIBVIRT-BASICS: enable system services"
    service: name="{{ item }}" state=restarted enabled=yes masked=no
    with_items:
      - "NetworkManager"
      - "firewalld"
      - "httpd"
      - "libvirtd"

  - name: "LIBVIRT-BASICS: add firewalld services"
    firewalld:
      service: "{{ item }}"
      immediate: yes
      permanent: yes
      state: enabled
    with_items:
      - "http"
      - "https"

  - name: "LIBVIRT-BASICS: add firewalld ports"
    firewalld:
      port: "{{ item }}"
      immediate: yes
      permanent: yes
      state: enabled
    with_items:
      - "{{ kvm_cfg.http_port }}/tcp"

# A reminder that if we use a port not natively included by selinux, we need to add it
#   
#  - name: "LIBVIRT-BASICS: add http port to selinux http_port_t"
#  - shell:
#      cmd: |
#        semanage port -a -t http_port_t -p tcp {{ kvm_cfg.http_port }}

  - name: "LIBVIRT-BASICS: loopback mount ISO as repo"
    mount:
      src:    "{{ kvm_cfg.iso.dir }}/{{ kvm_cfg.iso.name }}"
      path:   "{{ kvm_cfg.iso.mount }}"
      opts:   "loop,ro"
      state:  "mounted"
      fstype: "iso9660"
