##   Christoph Doerbeck
##
## Summary:
##
## I am using blocks to:
##
##   localize variables to related tasks
##   define variables once and in one place
##   reduces cut & paste errors and make debugging MUCH easier
##

    ##
    ## When an kickstart profile is defined, deploy ks.cfg and mount iso for repo access
    ##

    - block:

        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): create kickstart dir '{{ b_ks_dir }}'"
          file: path="{{ b_ks_dir }}" mode="0755" state=directory

        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): deploying kickstart '{{ b_ks_cfg }}'"
          vars:
            p_diskDevice: "{{ hw_profile[b_hw_profile].disk.dev }}"
          template:
            src:  "{{ ks_profile[b_ks_profile].template }}"
            dest: "{{ b_ks_dir }}/{{ b_ks_cfg }}"
            owner: root
            group: apache
            mode: 0644

        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): stat repo mount point '{{ b_repo_dir }}/{{ b_repo_subdir }}'"
          stat: path="{{ b_repo_dir }}/{{ b_repo_subdir }}"
          register: test_repo_mount
          when: b_iso_name != ""

        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): create repo mount point '{{ b_repo_dir }}/{{ b_repo_subdir }}'"
          file: path="{{ b_repo_dir }}/{{ b_repo_subdir }}" mode="0755" state=directory
          when: 
            - test_repo_mount.stat.exists == false

        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): mount repo '{{ b_repo_dir }}/{{ b_repo_subdir }}' on '{{ b_repo_dir }}/{{ b_repo_subdir }}'"
          vars:
          mount:
            path:   "{{ b_repo_dir }}/{{ b_repo_subdir }}"
            src:    "{{ b_iso_dir }}/{{ b_iso_name }}"
            opts:   "loop,ro"
            state:  "mounted"
            fstype: "iso9660"
          when: b_iso_name != ""

      vars:
        b_hw_profile:    "{{ hostvars[tdp_node_name]['h_hwPROF'] | default ('') }}"
        b_ks_profile:    "{{ hostvars[tdp_node_name]['h_ksPROF'] | default ('') }}"
        b_ks_dir:        "{{ kvm_cfg.kickstart.dir }}"
        b_ks_template:   "{{ kvm_cfg.kickstart.dir }}"
        b_ks_cfg:        "{{ g_clusterName }}-{{ tdp_node_name }}.cfg"
        b_repo_dir:      "{{ kvm_cfg.repo.dir | default ('') }}"
        b_repo_subdir:   "{{ ks_profile[hostvars[tdp_node_name]['h_ksPROF']].mnt | default ('') }}"
        b_iso_name:      "{{ ks_profile[hostvars[tdp_node_name]['h_ksPROF']].iso | default ('') }}"
        b_iso_dir:       "{{ kvm_cfg.iso.dir | default ('') }}"

      when: 
        - hostvars[tdp_node_name]['h_ksPROF'] != ""

    ##
    ## Now get on with virt-install
    ##

    - block:

        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): clean {{ fragment_dir }}"
          shell: "rm -rf {{ fragment_dir }}"
        
        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): create {{ fragment_dir }}"
          file: path="{{ fragment_dir }}" mode="0755" state=directory

        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): create virt-install command base"
          template:
            src:  virtinstall-base.j2
            dest: "{{ fragment_dir }}/10-base"

        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): adding kernel_args with network and ISO location"
          template:
            src: virtinstall-location.j2
            dest: "{{ fragment_dir }}/20-location"
          when: p_iso_name != ""

        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): add extra disks to virt-install command"
          vars:
            p_disksize: "{{ rs_profile[hostvars[tdp_node_name]['h_rsPROF']]['storage']['extra'][p_diskname].size }}"
          template:
            src: virtinstall-extra.j2
            dest: "{{ fragment_dir }}/30-extra-{{ p_diskname }}"
          loop: "{{ rs_profile[hostvars[tdp_node_name]['h_rsPROF']].storage.extra | flatten(1) }}"
          loop_control:
            loop_var: p_diskname
          when: rs_profile[hostvars[tdp_node_name]['h_rsPROF']].storage.extra is defined

        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): complete virt-install command"
          template:
            src: virtinstall-finish.j2
            dest: "{{ fragment_dir }}/50-finish"

        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): assemble config fragments"
          assemble:
            src: "{{ fragment_dir }}"
            dest: "{{ scripts_dir }}/{{ tdp_node_name }}-virtinstall.sh"
            owner: root
            group: root
            mode: 644

        - name: "TASKS-DEPLOY-INSTALL-01 ({{ tdp_node_name }}): execute virt-install script"
          shell:
            cmd: |
              bash "{{ scripts_dir }}/{{ tdp_node_name }}-virtinstall.sh"

      vars:

        scripts_dir:  "/var/tmp/{{ g_clusterName }}"
        fragment_dir: "/var/tmp/{{ g_clusterName }}/{{ tdp_node_name }}-fragments"

        p_ks_profile: "{{ hostvars[tdp_node_name]['h_ksPROF'] | default ('') }}"
        p_iso_name:   "{{ ks_profile[p_ks_profile].iso | default ('') }}"
        p_iso_dir:    "{{ kvm_cfg.iso.dir | default ('') }}"
        p_name:       "{{ hostvars[tdp_node_name]['inventory_hostname_short'] }}"
        p_vmname:     "{{ g_clusterName }}-{{ hostvars[tdp_node_name]['inventory_hostname_short'] }}"
        p_location:   "{{ p_iso_dir }}/{{ p_iso_name }}"
        p_ksurl:      "{{ kvm_cfg.kickstart.url}}/{{ g_clusterName }}-{{ tdp_node_name }}.cfg"
        p_mac:        "{{ hostvars[tdp_node_name]['h_pubMAC'] }}"
        p_ip:         "{{ hostvars[tdp_node_name]['h_pubIP'] }}"
        p_nm:         "{{ hostvars[tdp_node_name]['g_pubNM'] }}"
        p_gw:         "{{ hostvars[tdp_node_name]['g_pubGW'] }}"
        p_bus:        "{{ hw_profile[hostvars[tdp_node_name]['h_hwPROF']].disk.bus }}"
        p_dns:        "{{ hostvars[tdp_node_name]['g_pubDNS'] }}"
        p_sparse:     "{{ hw_profile[hostvars[tdp_node_name]['h_hwPROF']].disk.sparse }}"
        p_netdev:     "{{ hw_profile[hostvars[tdp_node_name]['h_hwPROF']].network.model }}"
        p_memsize:    "{{ rs_profile[hostvars[tdp_node_name]['h_rsPROF']].memsize }}"
        p_disksize:   "{{ rs_profile[hostvars[tdp_node_name]['h_rsPROF']].storage.root.size }}"
        p_vcpu:       "{{ rs_profile[hostvars[tdp_node_name]['h_rsPROF']].vcpus }}"
        p_cpu:        "{{ hw_profile[hostvars[tdp_node_name]['h_hwPROF']].cpu.type | default ('host-model') }}"

